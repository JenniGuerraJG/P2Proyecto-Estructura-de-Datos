
package com.mycompany.p2proyecto_estructuradatos;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.util.ArrayList;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;


public class RegistroNotasJfr extends javax.swing.JFrame {
    
  private List<Estudiante> listaEstudiantes;
    public RegistroNotasJfr() {
        initComponents();
        nombreEsTxt.setOpaque(false); 
        nombreEsTxt.setBackground(new Color(0, 0, 0, 0));
        notaP1Txt.setOpaque(false); 
        notaP1Txt.setBackground(new Color(0, 0, 0, 0));
        notaP2Txt.setOpaque(false); 
        notaP2Txt.setBackground(new Color(0, 0, 0, 0));
        notaP3Txt.setOpaque(false); 
        notaP3Txt.setBackground(new Color(0, 0, 0, 0));
      listaEstudiantes = new ArrayList<>();
      personalizarTabla();
    }
    
    private void personalizarTabla() {
        listaEstudiantesTb.setFont(new Font("Segoe UI", Font.PLAIN, 16));
        listaEstudiantesTb.setRowHeight(30);
        listaEstudiantesTb.setIntercellSpacing(new java.awt.Dimension(10, 10));
        listaEstudiantesTb.setGridColor(new java.awt.Color(230, 230, 230));
        listaEstudiantesTb.setShowGrid(true);
        listaEstudiantesTb.setFillsViewportHeight(true);
        listaEstudiantesTb.setOpaque(true); // Asegura que la tabla no sea transparente
        listaEstudiantesTb.setBackground(new Color(255, 255, 255)); // Fondo blanco

        JTableHeader header = listaEstudiantesTb.getTableHeader();
        header.setFont(new Font("Segoe UI", Font.BOLD, 18));
        header.setBackground(new Color(60, 63, 65));
        header.setForeground(new Color(255, 255, 255));
        header.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.GRAY));

        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        listaEstudiantesTb.setDefaultRenderer(Object.class, centerRenderer);

        DefaultTableCellRenderer headerRenderer = (DefaultTableCellRenderer) listaEstudiantesTb.getTableHeader().getDefaultRenderer();
        headerRenderer.setHorizontalAlignment(JLabel.CENTER);

        jScrollPane1.getViewport().setOpaque(true); // Asegura que el viewport no sea transparente
        jScrollPane1.getViewport().setBackground(new Color(255, 255, 255)); // Fondo blanco
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nombreEsTxt = new javax.swing.JTextField();
        notaP1Txt = new javax.swing.JTextField();
        notaP2Txt = new javax.swing.JTextField();
        notaP3Txt = new javax.swing.JTextField();
        RegistrarAlumnoBtt = new javax.swing.JButton();
        borrarCamposBtt = new javax.swing.JButton();
        ordenarListaBtt = new javax.swing.JButton();
        ordenarCalificacionesBtt = new javax.swing.JButton();
        buscarAlumno = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaEstudiantesTb = new javax.swing.JTable();
        interfazGUI = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nombreEsTxt.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        nombreEsTxt.setForeground(new java.awt.Color(255, 255, 255));
        nombreEsTxt.setBorder(null);
        nombreEsTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreEsTxtActionPerformed(evt);
            }
        });
        getContentPane().add(nombreEsTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 240, 300, 30));

        notaP1Txt.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        notaP1Txt.setForeground(new java.awt.Color(255, 255, 255));
        notaP1Txt.setBorder(null);
        getContentPane().add(notaP1Txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 500, 90, 30));

        notaP2Txt.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        notaP2Txt.setForeground(new java.awt.Color(255, 255, 255));
        notaP2Txt.setBorder(null);
        notaP2Txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notaP2TxtActionPerformed(evt);
            }
        });
        getContentPane().add(notaP2Txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(164, 500, 90, 30));

        notaP3Txt.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        notaP3Txt.setForeground(new java.awt.Color(255, 255, 255));
        notaP3Txt.setBorder(null);
        getContentPane().add(notaP3Txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(294, 500, 100, 30));

        RegistrarAlumnoBtt.setText("registrar");
        RegistrarAlumnoBtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrarAlumnoBttActionPerformed(evt);
            }
        });
        getContentPane().add(RegistrarAlumnoBtt, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 570, 300, 40));

        borrarCamposBtt.setText("jButton1");
        borrarCamposBtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarCamposBttActionPerformed(evt);
            }
        });
        getContentPane().add(borrarCamposBtt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 633, 40, 40));

        ordenarListaBtt.setText("jButton1");
        ordenarListaBtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordenarListaBttActionPerformed(evt);
            }
        });
        getContentPane().add(ordenarListaBtt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 390, 50, 40));

        ordenarCalificacionesBtt.setText("jButton1");
        ordenarCalificacionesBtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordenarCalificacionesBttActionPerformed(evt);
            }
        });
        getContentPane().add(ordenarCalificacionesBtt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 480, 50, 40));

        buscarAlumno.setText("jButton1");
        getContentPane().add(buscarAlumno, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 300, 50, 40));

        listaEstudiantesTb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nombres", "Nota P1", "Nota P2", "Nota P3", "Nota Final"
            }
        ));
        jScrollPane1.setViewportView(listaEstudiantesTb);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 170, 520, 220));

        interfazGUI.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/registroInterfaz.png"))); // NOI18N
        getContentPane().add(interfazGUI, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1120, 670));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nombreEsTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreEsTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreEsTxtActionPerformed

    private void notaP2TxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notaP2TxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_notaP2TxtActionPerformed

    private void borrarCamposBttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarCamposBttActionPerformed
        nombreEsTxt.setText("");
        notaP1Txt.setText("");
        notaP2Txt.setText("");
        notaP3Txt.setText("");
    }//GEN-LAST:event_borrarCamposBttActionPerformed

    private void RegistrarAlumnoBttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistrarAlumnoBttActionPerformed
       String nombre = nombreEsTxt.getText();
        if (!esNombreValido(nombre)) {
            JOptionPane.showMessageDialog(this, "El nombre debe contener solo letras y tener exactamente cuatro palabras.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            double nota1 = Double.parseDouble(notaP1Txt.getText());
            double nota2 = Double.parseDouble(notaP2Txt.getText());
            double nota3 = Double.parseDouble(notaP3Txt.getText());

            if (!sonNotasValidas(nota1, nota2, nota3)) {
                JOptionPane.showMessageDialog(this, "Las notas deben ser n√∫meros entre 0 y 10.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            double notaFinal = (nota1 + nota2 + nota3) / 3;
            Estudiante estudiante = new Estudiante(nombre, nota1, nota2, nota3);
            listaEstudiantes.add(estudiante);
            actualizarTabla();
            
            nombreEsTxt.setText("");
            notaP1Txt.setText("");
            notaP2Txt.setText("");
            notaP3Txt.setText("");
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Las notas deben ser n√∫meros v√°lidos.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_RegistrarAlumnoBttActionPerformed

    private void ordenarListaBttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenarListaBttActionPerformed
        ordenarAlfabeticamenteQuickSort();
    }//GEN-LAST:event_ordenarListaBttActionPerformed
private void ordenarAlfabeticamenteQuickSort() {
    quickSort(0, listaEstudiantes.size() - 1);
    actualizarTabla();
}

private void quickSort(int low, int high) {
    if (low < high) {
        int pi = partition(low, high);
        quickSort(low, pi - 1);
        quickSort(pi + 1, high);
    }
}

    private int partition(int low, int high) {
        String pivot = listaEstudiantes.get(high).getNombre();
        int i = (low - 1);
        for (int j = low; j < high; j++) {
            if (listaEstudiantes.get(j).getNombre().compareToIgnoreCase(pivot) < 0) {
                i++;
                Estudiante temp = listaEstudiantes.get(i);
                listaEstudiantes.set(i, listaEstudiantes.get(j));
                listaEstudiantes.set(j, temp);
            }
        }
        Estudiante temp = listaEstudiantes.get(i + 1);
        listaEstudiantes.set(i + 1, listaEstudiantes.get(high));
        listaEstudiantes.set(high, temp);
        return i + 1;
    }


        private void ordenarCalificacionesBurbuja() {
           int n = listaEstudiantes.size();
        for (int i = 0; i < n - 1; i++) {
            for (int j = 0; j < n - i - 1; j++) {
                double notaFinal1 = listaEstudiantes.get(j).calcularNotaFinal();
                double notaFinal2 = listaEstudiantes.get(j + 1).calcularNotaFinal();
                if (notaFinal1 < notaFinal2) { // Cambiado a menor que para ordenar de mayor a menor
                    Estudiante temp = listaEstudiantes.get(j);
                    listaEstudiantes.set(j, listaEstudiantes.get(j + 1));
                    listaEstudiantes.set(j + 1, temp);
                }
            }
        }
        actualizarTabla();
    }

    
    private void ordenarCalificacionesBttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenarCalificacionesBttActionPerformed
         ordenarCalificacionesBurbuja();
    }//GEN-LAST:event_ordenarCalificacionesBttActionPerformed

   private void actualizarTabla() {
    DefaultTableModel model = (DefaultTableModel) listaEstudiantesTb.getModel();
    model.setRowCount(0); // Limpiar la tabla
    for (Estudiante estudiante : listaEstudiantes) {
        model.addRow(new Object[]{
            estudiante.getNombre(),
            estudiante.getNotaP1(),
            estudiante.getNotaP2(),
            estudiante.getNotaP3(),
            estudiante.calcularNotaFinal()
        });
    }
}
    
     private boolean esNombreValido(String nombre) {
        String[] palabras = nombre.split("\\s+");
        if (palabras.length != 4) {
            return false;
        }
        for (String palabra : palabras) {
            if (!palabra.matches("[a-zA-Z]+")) {
                return false;
            }
        }
        return true;
    }
     
    private boolean sonNotasValidas(double... notas) {
        for (double nota : notas) {
            if (nota < 0 || nota > 10) {
                return false;
            }
        }
        return true;
    }
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroNotasJfr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroNotasJfr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroNotasJfr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroNotasJfr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroNotasJfr().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton RegistrarAlumnoBtt;
    private javax.swing.JButton borrarCamposBtt;
    private javax.swing.JButton buscarAlumno;
    private javax.swing.JLabel interfazGUI;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable listaEstudiantesTb;
    private javax.swing.JTextField nombreEsTxt;
    private javax.swing.JTextField notaP1Txt;
    private javax.swing.JTextField notaP2Txt;
    private javax.swing.JTextField notaP3Txt;
    private javax.swing.JButton ordenarCalificacionesBtt;
    private javax.swing.JButton ordenarListaBtt;
    // End of variables declaration//GEN-END:variables
}
